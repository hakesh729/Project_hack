/* 

    Carry Save Addition:  3-to-2 Summand Reducer

    a[i], b[i], c[i] are fed as input to (i+1)th Full Adder to give sum[i] and carry[i+1]

    carry[i+1] is saved without providing it as input to next Full Adder

*/ 

CHIP CSA
{
  IN a[16], b[16], c[16];
  OUT carry[16], sum[16];
  PARTS:

  Xor(a=a[0], b=a[0], out=carry[0]);  //  initialising carry[0] to 0

  Fulladd(a=a[0], b=b[0], c=c[0], sum=sum[0], carry=carry[1]);
  Fulladd(a=a[1], b=b[1], c=c[1], sum=sum[1], carry=carry[2]);
  Fulladd(a=a[2], b=b[2], c=c[2], sum=sum[2], carry=carry[3]);
  Fulladd(a=a[3], b=b[3], c=c[3], sum=sum[3], carry=carry[4]);
  Fulladd(a=a[4], b=b[4], c=c[4], sum=sum[4], carry=carry[5]);
  Fulladd(a=a[5], b=b[5], c=c[5], sum=sum[5], carry=carry[6]);
  Fulladd(a=a[6], b=b[6], c=c[6], sum=sum[6], carry=carry[7]);
  Fulladd(a=a[7], b=b[7], c=c[7], sum=sum[7], carry=carry[8]);
  Fulladd(a=a[8], b=b[8], c=c[8], sum=sum[8], carry=carry[9]);
  Fulladd(a=a[9], b=b[9], c=c[9], sum=sum[9], carry=carry[10]);
  Fulladd(a=a[10], b=b[10], c=c[10], sum=sum[10], carry=carry[11]);
  Fulladd(a=a[11], b=b[11], c=c[11], sum=sum[11], carry=carry[12]);
  Fulladd(a=a[12], b=b[12], c=c[12], sum=sum[12], carry=carry[13]);
  Fulladd(a=a[13], b=b[13], c=c[13], sum=sum[13], carry=carry[14]);
  Fulladd(a=a[14], b=b[14], c=c[14], sum=sum[14], carry=carry[15]);
  Fulladd(a=a[15], b=b[15], c=c[15], sum=sum[15], carry=c16);

}