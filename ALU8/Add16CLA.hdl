/**
 * CHIP NAME : Add16CLA
 *
 * DESCRIPTION : 4-bit CLA based 16-bit adder using higher-level propagate and generate terms
 *
 *  LOGIC :
    z = x + y where x,y,z are 16 bit numbers in 2's Complement Form
    cb = control bit , used for indicating ADDITION or SUBSTRACTION 
    S = signed bit , bit that describes whether x,y are signed (1) or unsigned(0)
    OF = OverFlow bit, indicates overflow if any
 *
 */

CHIP Add16CLA{
    IN x[16], y[16], cb , S;
    OUT z[16] , OF;

    PARTS:
    // Toggle bits
    IfOnesComplement(y=y[0..15],cb=cb ,z=w);
    //Propagate and generate terms
    Xor16(x=x[0..15], y=w, z=p);

    And16(a=x[0..15], b=w, out=g);

    //Higher Level Propagate Terms
    HigherPropagate(p=p,g=g,P0=P0,P1=P1,P2=P2,P3=P3);

    //Higher Level Generate Terms
    HigherGenerate(p=p,g=g,G0=G0,G1=G1,G2=G2,G3=G3);

    //ci , i = 4,8,12,16
    //c4
    And(a=P0, b=cb, out=w1);
    Or(a=w1, b=G0, out=c4);

    //c8
    And3(a=P1, b=P0, c=cb, out= w2);
    And(a=P1, b=G0, out=w3);
    Or3(a=w2 , b=w3 , c= G1, out =c8);

    //c12
    And4(a=P0 , b=P1 ,c=P2, d=cb, out=w4);
    And3(a=P1, b=P2, c=G0 , out=w5 );
    And(a=P2, b=G1, out=w6);
    Or4(a=w4 ,b=w5 , c=w6 , d=G2 , out=c12);

    //c16
    And4(a=P0 , b=P1 , c=P2 , d=P3 , out=w7);
    And(a=w7, b=cb, out=w8);

    And4(a=P3, b=P2 , c=P1 ,d =G0 , out = w9);
    And3(a=P3 , b=P2 , c =G1 , out = w10);
    And(a=P3, b=G2, out=w11);

    Or4(a=w8 , b =w9 , c= w10, d=w11 , out = w12);
    Or(a=w12, b=G3, out=c16);


    //ci i= 1,2,3; 5,6,7 ; 9,10,11 ; 13,14,15
    CarryInCLA( p = p , g = g,c0 = cb, c4= c4, c8 = c8  , c12 = c12, c16 = c16, C = c);

    OverFlow(CA=c,CB= c16,cb = cb ,S = S,OF = OF);

    //si i=0..15
    Xor16(x = p, y = c, z = z); 
    
}